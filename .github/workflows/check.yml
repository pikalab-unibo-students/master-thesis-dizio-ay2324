name: CI/CD
on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.gitignore'
      - '.mergify.yml'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: Preliminary Checks
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # all history

      - name: Install Poetry
        run: pip install -r requirements.txt

      - name: Restore Development Environment
        run: poetry install

      - name: Check code is syntactically correct
        shell: bash
        run: poetry run poe compile

      - name: Static Checks
        shell: bash
        run: poetry run poe mypy

  unit-tests:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
    runs-on: ${{ matrix.os }}
    name: Unit Tests on Python ${{ matrix.python-version }}, ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pip install -r requirements.txt

      - name: Restore Development Environment
        run: poetry install --all-extras

      - name: Run Unit Tests (excluding test_examples.py)
        shell: bash
        env:
          PYTHONIOENCODING: utf-8
        run: poetry run pytest tests/ --ignore=tests/test_examples.py

  notebook-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    name: Notebook Tests (test_examples.py)
    timeout-minutes: 30
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pip install -r requirements.txt

      - name: Restore Development Environment
        run: poetry install --all-extras

      - name: Run test_examples.py
        shell: bash
        env:
          PYTHONIOENCODING: utf-8
        run: poetry run pytest tests/test_examples.py

      - name: Coverage
        shell: bash
        env:
          PYTHONIOENCODING: utf-8
        run: |
          poetry run poe coverage
          poetry run poe coverage-report
          poetry run poe coverage-html

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report-notebooks-${{ github.sha }}
          path: htmlcov
          if-no-files-found: ignore
          overwrite: true

  deploy:
    name: Deploy
    if: github.event_name == 'push' && github.ref_name == 'master'
    needs:
      - notebook-tests
    uses: ./.github/workflows/deploy.yml
    secrets: inherit